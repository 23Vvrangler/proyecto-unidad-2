name: app_capachica
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.8.0

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  analyzer: ^6.11.0
  cupertino_icons: ^1.0.8 # Proporciona iconos estilo iOS para Flutter.
  google_sign_in: ^6.2.1 # Permite la autenticación de usuarios con Google.
  equatable: ^2.0.5 # Ayuda a comparar objetos en Dart (útil para BLoC).
  shared_preferences: ^2.2.3 # Permite almacenar datos simples clave-valor de forma persistente.
  provider: ^6.1.2 # Un paquete simple para la gestión de estado y la inyección de dependencias.
  toast: ^0.3.0 # NOTA: 'toast' parece no tener actualizaciones recientes significativas. Considera 'fluttertoast' si necesitas más funcionalidades o mejor mantenimiento.
  retrofit: ^4.1.0 # Generador de cliente HTTP seguro para RESTful APIs (basado en Dio).
  json_annotation: ^4.9.0 # Herramienta para generar código que convierte JSON en objetos Dart y viceversa.
  dio: ^5.8.0+1  # Un potente cliente HTTP para Dart, soporta interceptores, formularios, etc.
  pretty_dio_logger: ^1.3.1 # Interceptor para Dio que registra solicitudes y respuestas HTTP de forma bonita en la consola.
  logger: ^2.3.0 # Una librería para logging flexible y personalizable.
  animated_floating_buttons: ^0.0.2 # NOTA: Este paquete es muy antiguo y no ha sido actualizado. Es posible que no funcione con versiones recientes de Flutter. Considera buscar alternativas en pub.dev.
  syncfusion_flutter_charts: ^26.1.35 # Proporciona widgets de gráficos ricos y personalizables. (Esta versión puede requerir una licencia).
  sqflite: ^2.3.3+1 # Plugin para base de datos SQLite en Flutter.
  #path_provider: ^2.1.3 # Permite obtener rutas comunes en el sistema de archivos (documentos, caché, etc.).
  data_connection_checker_tv: ^0.3.5-nullsafety # NOTA: Parece que no ha tenido actualizaciones significativas. Puede que aún funcione, pero busca alternativas si tienes problemas. Sirve para verificar la conexión a internet.
  cloud_firestore: ^4.17.4 # Plugin oficial para interactuar con Cloud Firestore (base de datos NoSQL de Firebase).
  firebase_core: ^2.31.1 # Plugin esencial para inicializar cualquier servicio de Firebase en tu aplicación Flutter.
  http: ^1.2.1 # Un paquete HTTP simple y ligero para Dart.
  intl: ^0.19.0 # Librería para internacionalización y localización, incluyendo formato de fechas, números y monedas.
  geolocator: ^12.0.0 # Proporciona acceso a la ubicación GPS del dispositivo.
  geocoding: ^3.0.0 # Permite la geocodificación y geocodificación inversa (convertir coordenadas a direcciones y viceversa).
  floor: ^1.5.0 # Un generador de base de datos SQLite persistente para Flutter (similar a Room en Android).
  fluttertoast: ^8.2.12 # Un paquete popular para mostrar mensajes "toast" (notificaciones temporales). Reemplaza tu anterior 'toast' si necesitas algo más mantenido.
  csv: ^5.1.1 # Permite leer y escribir archivos CSV.
  excel: ^3.0.0 # Proporciona funcionalidades para leer y escribir archivos Excel (XLSX).
  # share_plus: ^8.0.1     # Use the latest stable version that uses web ^1.0.0
  file_picker: ^8.0.0 # Permite al usuario seleccionar archivos de almacenamiento interno o externo.
  #image_picker: ^1.1.2 # Plugin para seleccionar imágenes o capturar fotos/videos de la galería/cámara.
  file_selector: ^1.0.0 # NOTA: Parece que no ha tenido actualizaciones recientes significativas. Sirve para seleccionar archivos de forma más específica por plataforma.
  flutter_launcher_icons: ^0.13.1 # NOTA: Este paquete no ha tenido actualizaciones desde 2023. Puede que aún funcione, pero considera su antigüedad si tienes problemas con nuevas versiones de Flutter. Genera iconos de lanzador de aplicaciones.
  path_provider: ^2.0.11 # O la última versión
  image_picker: ^1.0.4  # O la última versión (para seleccionar/capturar imágenes)
  permission_handler: ^11.0.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0 # Conjunto de reglas de linting para promover buenas prácticas de codificación en Flutter.
  build_runner: ^2.4.11 # Herramienta para generar código Dart (utilizada por json_serializable, retrofit_generator, floor_generator).
  json_serializable: ^6.8.0 # Generador de código para la serialización/deserialización de JSON.
  retrofit_generator: ^8.1.0 # Generador de código para el paquete Retrofit.
  floor_generator: ^1.5.0 # Generador de código para el paquete Floor.

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  assets:
    - assets/images/
  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
